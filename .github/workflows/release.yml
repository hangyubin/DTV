name: Build and Release APK

on:
  push:
    tags:
      - 'v*' # 当推送以v开头的标签时触发，例如v1.0.0
  workflow_dispatch: # 添加手动触发选项
    inputs:
      version-tag:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
      is-prerelease:
        description: 'Mark as pre-release'
        type: boolean
        default: false
      build-type:
        description: 'Build type'
        type: choice
        options:
          - apk
          - appbundle
        default: 'apk'

permissions:
  contents: write  # 允许写入内容（包括创建标签）

env:
  FLUTTER_VERSION: '3.32.0'
  BUILD_CACHE_KEY: ${{ github.sha }}

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史记录以便创建标签

      - name: Cache Flutter SDK and dependencies
        uses: actions/cache@v3
        id: flutter-cache
        with:
          path: |
            ~/flutter
            ~/.pub-cache
          key: flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('pubspec.lock') }}

      - name: Set up Flutter
        if: steps.flutter-cache.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('pubspec.lock') }}
          cache-path: ~/flutter

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install dependencies
        if: steps.flutter-cache.outputs.cache-hit != 'true'
        run: flutter pub get

      - name: Create version tag (manual trigger only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          git config --global user.name "laopaoer-wallet"
          git config --global user.email "laopaoer@protonmail.com"
          git tag ${{ github.event.inputs.version-tag }}
          git push origin ${{ github.event.inputs.version-tag }}

      - name: Build APK or App Bundle
        run: |
          if [ "${{ github.event.inputs.build-type || 'apk' }}" = "appbundle" ]; then
            flutter build appbundle --release
          else
            flutter build apk --release --split-per-abi
          fi

      - name: Determine release info
        id: release-info
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.version-tag }}" >> $GITHUB_OUTPUT
            echo "release_name=Release ${{ github.event.inputs.version-tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "release_name=Release ${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release-info.outputs.tag }}
          name: ${{ steps.release-info.outputs.release_name }}
          prerelease: ${{ github.event.inputs.is-prerelease || false }}
          generate_release_notes: true
          files: |
            build/app/outputs/flutter-apk/*.apk
            build/app/outputs/bundle/release/*.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}